# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: branch push unit-test

on:
  push:
    branches:
      - '*'
      - '!master'
      - '!develop'


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create env file
      working-directory: ./
      run: |
        echo "Start creating .env file"
        echo "${{ secrets.ENV_FILE }}" > .env
        cat .env
        echo $PWD
    - name: Run test
      working-directory: ./
      run: |
        echo "Start running unit-test"
        echo $PWD
        cp ./docker-compose-file-template.yml ./docker-compose.yml
        echo "Start building"
        docker-compose up --build -d
        echo "Start define entrypoint"
        ENTRYPOINT="python -m pytest --cov=app --html=test/report/report.html -W ignore::DeprecationWarning -s --capture=fd --log-cli-level=INFO" 
        echo "Run prestart"

        docker-compose exec --no-TTY backend pip3 install pytest

        echo "Start run pytest"
        docker-compose exec -T backend $ENTRYPOINT
        
    - name: log
      continue-on-error: true
      run: |
        docker-compose logs